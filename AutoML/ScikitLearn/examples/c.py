import matplotlib.pyplot as plt

import numpy as np

# time = np.arange(0., 10., 0.2)
# velocity = np.zeros_like(time, dtype=float)
# distance = np.zeros_like(time, dtype=float)
# g = 9.8 	# m/s^2
# velocity = g * time
# distance = 0.5 * g * np.power(time, 2)

# fig, ax1 = plt.subplots()
# ax1.set_ylabel("distance (m)")
# ax1.set_xlabel("time")
# ax1.plot(time, distance, "blue")
# ax1.set_yticks(np.linspace(*ax1.get_ybound(), 10))
# ax1.tick_params(axis="y", labelcolor="blue")
# ax1.xaxis.grid()
# ax1.yaxis.grid()

# ax2 = ax1.twinx()

# ax2.set_ylabel("velocity (m/s)")
# ax2.set_xlabel("time")

# ax2.tick_params(axis="y", labelcolor="green")
# ax2.plot(time, velocity, "green")
# ax2.set_yticks(np.linspace(*ax2.get_ybound(), 10))

# fig.set_size_inches(7,5)
# fig.set_dpi(100)
# fig.legend(["Distance","Velocity"])

# plt.show()

bp_data = [[9.393488447884307, 8.816136600006233, 8.23230142919791, 8.047714591272081, 7.687585866293482, 7.665855271463924, 9.231758041255699, 8.4520026298754, 7.975609050454958, 7.6347680330039],
[9.39341618611066, 8.816103996939548, 8.232223155648104, 8.047609390267258, 7.687751530210938, 7.665601531470484, 9.231675046579888, 8.452119918130458, 7.975463429705557, 7.634512144387812],
[9.386317524832979, 8.80858848667201, 8.231226771109382, 8.044288966638026, 7.683742016701708, 7.663864112083042, 9.244910083695626, 8.444142116337677, 7.969853862407643, 7.625198939692775],
[9.373726696284061, 8.80051091066534, 8.232027466996813, 8.039636131362277, 7.673074670707931, 7.672133598467237, 9.272210258099758, 8.430739744585898, 7.9596602612875245, 7.616196173295138],
[9.37371782179644, 8.800510335440373, 8.232028778210264, 8.039633886730128, 7.673064351520131, 7.6721495173982674, 9.272231285301805, 8.430727389099921, 7.959652518669005, 7.61619697727859],
[9.37371782179644, 8.800510335440373, 8.232028778210264, 8.039633886730128, 7.673064351520131, 7.6721495173982674, 9.272231285301805, 8.430727389099921, 7.959652518669005, 7.61619697727859],
[9.373717821796443, 8.800510335440377, 8.232028778210264, 8.03963388673013, 7.673064351520131, 7.672149517398279, 9.272231285301805, 8.430727389099916, 7.959652518669009, 7.616196977278586],
[9.373717821796443, 8.800510335440377, 8.232028778210264, 8.03963388673013, 7.673064351520131, 7.672149517398279, 9.272231285301805, 8.430727389099916, 7.959652518669009, 7.616196977278586],
[9.406164374379085, 8.823502009791406, 8.22598573709228, 8.043621041988274, 7.716589832308792, 7.622344891313698, 9.195441058384814, 8.490381372542506, 7.987607232945371, 7.612768618355552],
[9.401851313251672, 8.523777623998997, 8.156076937021671, 8.610625915939439, 7.364197155374212, 7.937978084486966, 10.045145012776196, 8.050278805470425, 7.855912532988417, 7.733847951127282],
[7.005975903614457, 7.570481927710842, 6.333638554216868, 7.133807228915664, 7.363365853658538, 7.46490243902439, 6.958634146341465, 7.0286341463414646, 6.805439024390244, 6.009292682926829],
[6.835571163303631, 6.982086290067763, 5.812183885386615, 6.263302495995619, 5.639262843326776, 6.910614581543981, 6.5830119623845444, 5.568699325109815, 6.112930096676812, 5.536539743658271],
[5.371954086320725, 5.385834880944835, 5.038895365022834, 5.958674235251966, 5.710946271901339, 5.402916147102535, 6.70461135926074, 6.1110561162696815, 5.637901713981048, 4.740402580429824],
[3.4252409638554218, 4.332650602409639, 4.803493975903614, 4.393373493975903, 3.8446951219512195, 4.175731707317073, 4.457926829268292, 4.421707317073171, 4.4799999999999995, 4.504024390243902],        
[3.9857831325301203, 5.087349397590361, 4.24433734939759, 4.471807228915663, 3.954512195121951, 4.818170731707317, 3.453536585365854, 4.335243902439024, 4.682560975609756, 4.071463414634145],
[3.5144972117312983, 4.406776302560962, 3.410106159166282, 3.490951722407877, 3.9352153227412408, 4.390312488651714, 3.831877852368974, 3.2229626387920995, 4.004879662775783, 3.2459549826294527],       
[3.0459036144578295, 3.925173493975905, 3.534614457831325, 4.214987951807228, 3.4922486933797905, 3.85190243902439, 3.7923699186991864, 3.537280487804879, 4.245865853658537, 3.5368414634146323],        
[2.9083163140875175, 3.813987125645436, 2.9802079518072304, 3.5105905220883504, 3.182731402439027, 3.746885162601623, 3.3339339430894297, 2.9250799186991854, 3.7239021806039494, 3.249021300813004],     
[2.2607355421686757, 3.758259036144583, 2.611255421686755, 3.058728313253016, 2.5456792682926794, 3.7317250000000044, 2.7582365853658546, 2.8683884146341536, 3.518045731707325, 2.7767981707317033],     
[2.4594882485038005, 3.83112647185595, 2.536348330748753, 2.5416660153896498, 2.6609739984730023, 3.4727280619837972, 2.9758451308849625, 2.6185318559116517, 3.468890854916213, 2.943459280925173]]

fig = plt.figure(figsize =(10, 7))
ax = fig.add_subplot(111)
 
# Creating axes instance
bp = ax.boxplot(bp_data, patch_artist = True, vert = 0)
 
colors = ['#0000FF' for i in range(len(bp))]
 
for patch, color in zip(bp['boxes'], colors):
    patch.set_facecolor(color)
 
# changing color and linewidth of
# whiskers
for whisker in bp['whiskers']:
    whisker.set(color ='#8B008B',
                linewidth = 1.5,
                linestyle =":")
 
# changing color and linewidth of
# caps
for cap in bp['caps']:
    cap.set(color ='#8B008B',
            linewidth = 2)
    
# changing color and linewidth of
# medians
for median in bp['medians']:
    median.set(color ='red',
               linewidth = 3)
 
# changing style of fliers
for flier in bp['fliers']:
    flier.set(marker ='D',
              color ='#e7298a',
              alpha = 0.5)
     
# x-axis labels
# ax.set_yticklabels([column for columns in df_final.columns])
ax.set_yticklabels([i for i in range(len(bp_data))])
 
 
# Adding title
plt.title("Customized box plot")
 
# Removing top axes and right axes
# ticks
ax.get_xaxis().tick_bottom()
ax.get_yaxis().tick_left()
     
# show plot
plt.show()
 